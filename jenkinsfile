pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "taha2024/spring-crud" // Nom d'utilisateur DockerHub et nom de l'image Docker à créer
    }
    stages {
        stage('Cloner le projet') {
            steps {
                // Cloner le dépôt Git
                git branch: 'master', url: 'https://github.com/tahaelbekkaye/projet_Jenkins.git'
            }
        }
        stage('Construction du projet') {
            steps {
                script {
                    // Construire le projet Java avec Maven
                    sh './mvnw clean package'
                }
            }
        }
        stage('Exécuter les tests') {
            steps {
                script {
                    // Exécuter les tests et archiver les résultats
                    sh './mvnw test'
                }
                junit 'target/surefire-reports/*.xml' // Archiver les rapports de test
            }
        }
        stage('Construire l’image Docker') {
            steps {
                script {
                    // Construire l'image Docker à partir du projet Java
                    sh """
                    echo 'FROM openjdk:17-jdk-slim' > Dockerfile
                    echo 'COPY target/*.jar app.jar' >> Dockerfile
                    echo 'ENTRYPOINT ["java", "-jar", "/app.jar"]' >> Dockerfile
                    docker build -t ${DOCKER_IMAGE}:latest .
                    """
                }
            }
        }
        stage('Pousser l’image Docker') {
            steps {
                script {
                    // Se connecter à DockerHub et pousser l'image
                    docker.withRegistry('', 'docker-hub-credentials') {
                        sh "docker push ${DOCKER_IMAGE}:latest"
                    }
                }
            }
        }
    }
}
